---
title: Effort and power calculations for line transect surveys
author: Centre for Research into Ecological and Environmental Modelling <br> **University of St Andrews**
date: "`r Sys.Date()`"
bibliography: references.bib
csl: apa.csl
---
  
:::{.callout-tip}
## Demonstration
  
Effort needed to achieve objective
:::

# Why is study being undertaken?
- Emphasise the need for a pilot study
- recognise study is trying to achieve an objective
- success in achieving objective influenced by precision of density estimates

Distance sampling surveys do not take place in a vacuum.  They are conducted to try to answer some question.  Questions often take the form of:

> Has the population changed noticeably over time (since last survey)?
> Is density in management unit A different than density in management unit B?

Such questions are trite because we know that animals populations vary in both time and spaces; the interesting questions are the amount of such differences.  The statistical essence of such questions is differentiating **signal** (actual change) from **noise** random fluctuations.  The difficulty is compounded by the fact that our estimates possess uncertainty.  If there is too much uncertainty in our estimates of density, the uncertainty will impair our ability to detect the **signal** of population change.

Such questions require producing (usually) multiple density estimates and making comparisons between the estimates.

# Pilot study information

A pilot study is essential to test field protocols.  However it is also essential to gauge the volume of detections we can expect in our study area.  Insight into *encounter rate* will assist in designing the actual study.  @Buckland2015b outlines a formula for computing necessary transect effort given the *encounter rate* from a pilot study:

$$
L = \frac{b}{cv_t\left(\hat{D}\right)^2} \times \frac{1}{\mbox{enc rate}_{pilot}}
$$
with $b$=3 and $cv_t\left(\hat{D}\right)^2$ being desired coefficient of variation.  The Shiny application below has this formula embedded; users simply specify an encounter rate with the bottom-most slider, then consult the tab labelled `Eqn. 2.4` to discover the necessary transect length to achieve desired precision.  

Moving the `encounter rate` slider shows that as encounter rate increases, the necessary amount of effort decreases; but the fundamental shape of the relationship between effort and precision remains unchanged.

# Precision to answer a question

Awards are not given for conducting a survey resulting in a density estimate with a give level of precision, say a CV=0.18.  A more telling measure of a survey's potential value is the probability that it can detect change (given the change has occurred).  In statistical parlance, this is called power (probability of rejecting an hypothesis given it is false).  We will focus upon detection of temporal change for the remainder of this document.

Tim @gerrodette1987 first investigated this question in the context of animal populations.  I won't describe the details of his investigations other than to say I have code a portion of his work into the Shiny application below.  The scenario I have included has
- a linear (rather than exponential) change in population size over time and
- relationship between abundance and precision remaining the same as abundance changes (distance sampling is consistent with this assumption).

This brings the other portion of the Shiny app into play.  The cumulative change in the animal population and the duration of the (presumed) annual surveys influence the ability to detect change.  So too does the power of the investigation.  The greater the desired power, the better the precision of the density estimates.

Similarly, the longer the study, the less precision is required of the annual surveys to detect the change.  Likewise, if the cumulative change in the animal population is large, this change can be detected from density estimates with lower precision.  Of course, cumulative change in excess of 0.5 implies that more than half of the animal population under scrutiny has been lost.

## CV graph

The result tab showing the relationship between cumulative population change and necessary CV is shown in the `CV graph` tab.  There is a positive relationship between these: greater population loss requires less precision to detect; or small population change requires more precise density estimates.  The red dot and horizontal dotted line indicate the precision of annual estimates to detect the specified cumulative change over the specified number of annual surveys with the desired power.  For these calculations, the encounter rate from the pilot survey plays no role.

## Effort graph

The result tab labelled `Effort graph` brings information from the pilot survey into the calculations.  The `CV graph` indicates the necessary precision to achieve the desired results, this CV is fed into the formula from @Buckland2015b to estimate the amount of survey effort to be expended annually to achieve the precision derived from the power calculations.

The red ball and horizontal dotted line now indicates the amount of effort needed to achieve the specified objectives.  Small changes in abundance require exponentially larger amounts of annual survey effort to detect.  The steepness of that exponential curve is less extreme when encounter rates are large.

## Numerical result of power calculation

The final result tab simply provides a single numerical solution to the required CV and effort necessary to achieve that CV for the specified combination of cumulative change, number of annual surveys,  power and pilot study encounter rate.

# Other approaches

The methods presented in @gerrodette1987 are reasonably simple.  More sophisticated evaluation of distance sampling for population modelling is presented in @andersen2020.  A suggestion by @white2019 is that without *a priori* assessment of power to detect change, most wildlife assessment studies exaggerate their ability to detect change.

This Shiny app is intended to give investigators an approximate idea of the feasibility of conducting investigations to detect change in animal populations.  A further set of computations could ensue that converts computed effort into a cost figure for annual surveys.

The message is that conducting such investigations consistently with sufficient effort is a difficult challenge.  The challenges are particularly acute when the objective is rapid assessment of small amounts of population change for a study animal with low encounter rates.


<iframe id="example1" src="https://erex.shinyapps.io/powershiny/" style="border: none; width: 100%; height: 720px" frameborder="0"></iframe>

```{r}
#| label: powerui
#| echo: false
#| eval: false
ui <- fluidPage(

    # Application title
    titlePanel("Computation of required survey effort, followed by power to detect change"),

    # Sidebar with a slider input for number of bins 
    sidebarLayout(
        sidebarPanel(
            sliderInput("R",
                        "Cumulative change over study:",
                        min = 0.1,
                        max = 0.9,
                        value = 0.5),
            sliderInput("nyears",
                        "Number of annual surveys:",
                        min = 2,
                        max = 15,
                        value = 5),
            sliderInput("power",
                        "Power to detect change:",
                        min = 0.5,
                        max = 0.9,
                        value = .8),
            sliderInput("encrate",
                        "Encounter rate (detects per km):",
                        min = 0.1,
                        max = 2,
                        value = .25),
            sliderInput("b",
                        "Dispersion factor for design:",
                        min = 1,
                        max = 20,
                        value = 3),
            sliderInput("alpha",
                        "Type I error rate:",
                        min = 0.01,
                        max = .5,
                        value = .05),
        ),

        # Show results in five tabbed panels
        mainPanel(
          tabsetPanel(id="tabsets", 
            tabPanel("Description",
                     tags$h4("Description"),
                     tags$p("At the most basic, given an encounter rate from a pilot study, this application can help design a line transect survey.  Using Eqn. 2.4.2.2. of Buckland et al. (2015), the application can estimate the amount of line transect effort needed to estimate precision with a desired level of precision (measured by coefficient of variation)."),
                     tags$p("Subsequent to this calculation, computation of CV needed to achieve desired power based on Eqn. 10 of Gerrodette (1987). That formula assumes"),
                     tags$ul(
                       tags$li("CV is a constant over abundance"),
                       tags$li("Rate of change is linear over time"),
                     ),
                     tags$hr(),
                     tags$p("If interest lies only in designing a survey with a desired level of precision, the only slider that needs to be used is the Encounter Rate slider.  Consequently, the only result tab of interest is that labelled 'Eqn. 2.4'.  To conduct the prospective power calculation, the other sliders must be used and the other output tabs consulted."),
                     tags$h4("References"),
                     tags$ul(
                       tags$li("Buckland, S. T., Rexstad, E. A., Marques, T. A., & Oedekoven, C. S. (2015). Distance sampling: Methods and applications. Springer.
"),
                       tags$li("Gerrodette, T. (1987). A power analysis for detecting trends. Ecology, 68(5), 1364â€“1372. https://doi.org/10.2307/1939220
"),
                     )
                     ),
            tabPanel("Eqn. 2.4", value="eqn24Plot",
                     plotOutput("eqn24Plot")),
            tabPanel("CV graph", value="cvPlot",
                     plotOutput("cvPlot")),
            tabPanel("Effort graph", value="effortPlot",
                     plotOutput("effortPlot")),
            tabPanel("Numerical result for power calculation",
                     verbatimTextOutput("answer"),
                     textOutput("cv"),
                     textOutput("effort"))
          )
        )
    )
)
```

```{r}
#| context: server
#| echo: false
#| eval: false
server <- function(input, output) {
  
  lin.constn.cv <- function(R=0.1, n=10, alpha=0.05, power=0.8) {
    r <- R/(n-1)
    t1 <- r^2*n*(n-1)*(n+1)
    t2 <- 1+r*(n-1)*(1+r/6*(2*n-1))
    beta <- 1-power
    t3 <- 12 * (qnorm(alpha/2) + qnorm(beta))^2
    cv <- sqrt(t1/(t3*t2))
    return(cv)
  }
  eqn2.4 <- function(b, encrate, cv) {
    effort <- b/cv^2 * 1/encrate
    return(effort)
  }

  returnData <- 
    output$answer <- renderText({
      paste("Given:\n  Cumulative change=", input$R, 
            "\n  Years of surveys=", input$nyears,
            "\n  Power=", input$power,
            "\n  Encounter rate=", input$encrate,
            "\n  b=", input$b,
            "\n  alpha=", input$alpha)
                               })
      output$cv <- renderText({ paste("Required CV=", 
                                      round(lin.constn.cv(R=input$R, n=input$nyears,
                                                 alpha=input$alpha, power=input$power), 3))
                                })
      output$effort <- renderText({paste("Required effort=",
                                         round(eqn2.4(b=input$b, encrate=input$encrate,
                                                cv=lin.constn.cv(R=input$R, n=input$nyears, 
                                                                 alpha=input$alpha, power=input$power))))
                                })
      output$eqn24Plot <- renderPlot({
        cvseq <- seq(0.1, 0.5, by=0.01)
        resulteffort <- eqn2.4(b = input$b, encrate = input$encrate, cv=cvseq)
        plot(resulteffort, cvseq, main=paste("Effort to achieve desired CV\ngiven encounter rate=", input$encrate),
             ylab="Target CV", xlab="Effort (km)", type="l", lwd=2, 
             sub="Independent of popn change, number of years and power", font.sub=3)
      output$cvPlot <- renderPlot({
        rseq <- seq(0.1, 0.9, by=0.01)
        thecv <- lin.constn.cv(R=rseq, n=input$nyears, alpha=input$alpha, power=input$power)        
        plot(rseq, thecv, type="l", lwd=4,
             main=paste("CV with power=", input$power, "Number surveys=", input$nyears),
             xlab="Overall change in abundance",
             ylab="Needed coefficient of variation",
             ylim=c(0, 0.3),
             sub="Encounter rate and dispersion factor play no role in this calculation"
        )
        points(input$R, lin.constn.cv(R=input$R, n=input$nyears, alpha=input$alpha, power=input$power), 
               pch=19, col="red", cex=2)
        segments(0.0, lin.constn.cv(R=input$R, n=input$nyears, alpha=input$alpha, power=input$power),
                 input$R, lin.constn.cv(R=input$R, n=input$nyears, alpha=input$alpha, power=input$power),
                 lty=3)

      output$effortPlot <- renderPlot({
        rseq <- seq(0.1, 0.9, by=0.01)
        effort <- eqn2.4(b=input$b, encrate=input$encrate,
                         cv=lin.constn.cv(R=rseq, n=input$nyears, alpha=input$alpha, power=input$power))
        plot(rseq, effort, type="l", lwd=4,
             main=paste("Effort required with power=", input$power, 
                        "Number surveys=", input$nyears,
                        "Enc rate=", input$encrate,
                        "\n b=", input$b,
                        "alpha=", input$alpha),
             xlab="Overall change in abundance",
             ylab="Target effort per survey (km)",
             ylim=c(0, 20000)
        )
        points(input$R, 
               eqn2.4(b=input$b, encrate=input$encrate,
                      cv=lin.constn.cv(R=input$R, n=input$nyears, power=input$power)), 
               pch=19, col="red", cex=2)
        segments(0.0, eqn2.4(b=input$b, encrate=input$encrate,
                             cv=lin.constn.cv(R=input$R, n=input$nyears, power=input$power)), 
                 input$R, eqn2.4(b=input$b, encrate=input$encrate,
                                 cv=lin.constn.cv(R=input$R, n=input$nyears, power=input$power)), 
                 lty=3)
      })
    })
  })
}
```

# References
