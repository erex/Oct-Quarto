---
title: Bias in stratum-specific abundance estimates
author: Centre for Research into Ecological and Environmental Modelling <br> **University of St Andrews**
date: "`r Sys.Date()`"
bibliography: multi.bib    
csl: apa.csl
---

```{r}
#| label = "setup",
#| include = FALSE
knitr::opts_chunk$set(echo = TRUE)
```

:::{.callout-tip}

## Demonstration

Distance sampling simulation where detection functions differ between strata.  When stratum-specific abundance estimates are produced using a pooled detection function, bias arises.  The magnitude of the bias depends upon the magnitude of the difference in the detection functions.

:::

# Introduction

We tell participants in the introductory distance sampling workshop of the perils of estimating stratum-specific densities when using a pooled detection function [@Buckland2015, Sect. 2.3.1].  Therefore, if the purpose of the study is to produce stratum-specific density estimates, sufficient effort must be allocated per stratum to support stratum-specific detection functions. It might be the case that multiple strata share the same detection function, but reliance upon luck for that to occur is not the basis for sound inference.  Sufficient detections should be made in each stratum to assess whether strata share a common detection function.

This simulation study evaluates the magnitude of bias in stratum-specific density estimates when strata differ in the scale parameter of their detection functions.


```{r}
library(dsims)
library(leaflet)
library(knitr)
library(sf)
library(here)
```

# Study area

The only interesting feature of the study area used in this simulation is that it possesses two strata.  We could have employed more strata, but demonstration of the phenomenon is sufficient with only two strata.

```{r}
#| label = "studyarea"
myshapefilelocation <- here("shapefiles", "StrataPrj.shp")
northsea <- make.region(region.name = "minkes",
                      shape = myshapefilelocation,
                      strata.name = c("South", "North"),
                      units = "km")
```

## North Sea study area

Interest is in estimating the density of minke whales in the western portion of the North Sea, off the east coast of Britain.  The study area is divided into north and south strata, with the north stratum being roughly 1.9 times the size of the south stratum, as shown in the map below.

```{r}
#| label = "leafletmap"
m <- leaflet() %>% addProviderTiles(providers$Esri.OceanBasemap)
m <- m %>% 
  setView(1.4, 55.5, zoom=5)
minkes <- read_sf(myshapefilelocation)
study.area.trans <- st_transform(minkes, '+proj=longlat +datum=WGS84')
m <- addPolygons(m, data=study.area.trans$geometry, weight=2)
m
```

# Population specification

Population is evenly distributed (density surface is horizontal) and the population size is apportioned to the strata according to the stratum size.  This should result in both strata having the same density.

```{r}
#| label = "popspec"
areas <- northsea@area
prop.south <- areas[1]/sum(areas)
prop.north <- areas[2]/sum(areas)
total.abundance <- 3000
abund.south <- round(total.abundance * prop.south)
abund.north <- round(total.abundance * prop.north)
constant <- make.density(region = northsea, x.space = 10, constant = 1)
minkepop <- make.population.description(region = northsea,
                                           density = constant,
                                           N = c(abund.south, abund.north))
```

# Survey design

Specifying a single value for the number of samples will distribute the transects among strata proportional to the stratum sizes.  Emphasis of this simulation study is *not* upon the properties of the survey design, therefore a simple systematic parallel line transect survey is created.  Note however, there is large number of replicate transects in each stratum; a well-designed study.  Any bias in the estimated densities cannot be attributed to poor design.

```{r}
#| label = "survdesign"
coverage.grid <- make.coverage(northsea, n.grid.points = 100)
equal.cover <- make.design(region = northsea,
                           transect.type = "line",
                           design = "systematic",
                           samplers=40, 
                           design.angle = c(50, 40),
                           truncation = 0.8,
                           coverage.grid = coverage.grid)
```

## Properties of the design

To demonstrate the estimated number of transects in each stratum, the `run.coverage` function is used to show the number of replicates in each stratum is allocated roughly according to stratum size.

```{r}
#| label = "designprop"
design.properties <- run.coverage(equal.cover, reps = 10, quiet=TRUE)
mine <- data.frame(Num.transects=design.properties@design.statistics$sampler.count[3,],
                   Proportion.covered=design.properties@design.statistics$p.cov.area[3,])
kable(mine)
```

# What analysis to conduct

For purposes of this investigation, we look only at the same key function under which the data were simulated (the half normal) with no covariates.  In effect we are using the "wrong model" to make inference, except in the circumstance when $\Delta = 1$.

A second analysis, `strat.specific.or.not` is constructed to assess model selection performance: the "wrong" model is paired with the "correct" model that assumes stratum-specific detectability.  This contrast will measure the ability of AIC to choose the correct model as the difference between stratum-specific scale parameters ($\Delta$) changes.

```{r}
#| label = "whatanalysis"
pooled.hn <- make.ds.analysis(dfmodel = list(~1),
                                key = "hn",
                                criteria = "AIC",
                                truncation = 0.8)
strat.specific.or.not <- make.ds.analysis(dfmodel = list(~1, ~Region.Label),
                                key = "hn",
                                criteria = "AIC",
                                truncation = 0.8)
```

# Heart of the simulation

## Loop over $\Delta$ difference in $\sigma$ between strata

```{r}
#| label = "sigma"
delta.multiplier <- c(seq(from=0.5, to=1.1, by=0.1),
#                      seq(from=0.85, to=1.15, by=0.1),
                      seq(from=1.2, to=2.4, by=0.2))
sigma.south <- 0.3
north.sigma <- sigma.south*delta.multiplier
```

Scale parameter ($\sigma$) for the southern stratum remains fixed at `r sigma.south`, but in the northern stratum, the scale parameter is a multiple of the southern stratum $\sigma$, ranging from a low of `r round(min(north.sigma),2)` to a maximum of `r round(max(north.sigma),2)`.

```{r}
#| label = "sigmarange"
hn <- function(sigma, x) {return(exp(-x^2/(2*sigma^2)))}
for (i in seq_along(north.sigma)) {
  curve(hn(north.sigma[i],x),from=0,to=0.8,add=i!=1,  
        xlab="Distance", ylab="Detection probability", 
        main="Range of detection probability disparity\nSouth function in blue")
}
curve(hn(sigma.south,x),from=0,to=0.8, lwd=2, col='blue', add=TRUE)
```

```{r}
#| label = "loopsigma"
equalcover <- list()
whichmodel <- list()
num.sims <- 500
for (i in seq_along(delta.multiplier)) {
  sigma.strata <- c(sigma.south, sigma.south*delta.multiplier[i])
  detect <- make.detectability(key.function = "hn",
                               scale.param = sigma.strata,
                               truncation = 0.8)
  equalcover.sim <- make.simulation(reps = num.sims,
                                    design = equal.cover,
                                    population.description = minkepop,
                                    detectability = detect,
                                    ds.analysis = pooled.hn)
  whichmodel.sim <- make.simulation(reps = num.sims,
                                    design = equal.cover,
                                    population.description = minkepop,
                                    detectability = detect,
                                    ds.analysis = strat.specific.or.not)
  equalcover[[i]] <- run.simulation(equalcover.sim, run.parallel = TRUE, max.cores=7)
  whichmodel[[i]] <- run.simulation(whichmodel.sim, run.parallel = TRUE, max.cores=7)
}
```

# Simulation findings

Tabular results of simulations iterating over the range of $\Delta$ values for the scale parameters of the two strata.  As $\Delta$ approaches 1, the two detection functions converge, hence using the pooled detection function is appropriate.  When $\Delta>1$ bias again increases, however because for values of $\Delta>>1$, the detection function for the North stratum becomes nearly horizontal. The number of detections in the North stratum is becoming asymptotic. There is little margin for bias to arise in the North density estimate; bulk of bias arises from estimates in the South stratum.

The final column of the table indicates the proportion of replicates for which the stratum-specific detection function is selected using AIC.  The stratum-specific detection function model is the "correct" model when $\Delta \neq 1$.  However the stratum-specific detection function model is selected $\approx$ 20% of the time when $\Delta \approx 1$. More troubling, the stratum-specific detection function model is selected <50% of the time when $\Delta \neq 1$ implying the "incorrect" model using a pooled detection function is selected >50% of the time, even for large values of $\Delta$.

```{r}
#| label = "meaning",
#| column: body-outset, 
#| echo = FALSE
pctbias <- mat.or.vec(length(delta.multiplier),3)
ci.cover <- mat.or.vec(length(delta.multiplier),3)
num.detects <- mat.or.vec(length(delta.multiplier),3)
modelsel <- mat.or.vec(length(delta.multiplier),1)
bias.modsel <- mat.or.vec(length(delta.multiplier),3)
cover.modsel <- mat.or.vec(length(delta.multiplier),3)
for (i in seq_along(delta.multiplier)) {
  simsum <- summary(equalcover[[i]], description.summary=FALSE)
  selsum <- summary(whichmodel[[i]], description.summary=FALSE)
  pctbias[i, ] <- simsum@individuals$D[,3]
  ci.cover[i, ] <- simsum@individuals$D[,5]
  num.detects[i, ] <- simsum@individuals$summary[,3]
  bias.modsel[i, ] <- selsum@individuals$D[,3]
  cover.modsel[i, ] <- selsum@individuals$D[,5]
  modelsel[i] <- sum(whichmodel[[i]]@results$Detection[1,5, 1:num.sims]==2) / num.sims
}
pooled <- as.data.frame(cbind(pctbias, ci.cover, num.detects, modelsel))
names(pooled) <- c("Bias.N", "Bias.S", "Bias.Tot",
                "CICover.N", "CICover.S", "CICover.Tot",
                "Detects.N", "Detects.S", "Detects.Tot", "Prop.strat.model")
row.names(pooled) <- delta.multiplier
kable(pooled, digits=c(rep(1,3), rep(2,3), rep(0,3), 2), 
      caption="Results using pooled detection function")
save(equalcover, whichmodel, file="stratsim.RData")
```

When employing model selection to choose between models with pooled detection functions and stratum-specific detection functions, the most worrisome cases of bias arising when $\Delta << 1$ are eliminated.  Bias in stratum-specific density estimates become more pronounced as $\Delta >> 1$.When $\Delta$ is at its maximum, the probability of using the model that produces unbiased stratum-specific estimates is `r round(pooled[nrow(pooled), 10],2)`

```{r}
#| label = "selection",
#| echo = FALSE
with.selection <- as.data.frame(cbind(bias.modsel, cover.modsel))
names(with.selection) <- c("Bias.N", "Bias.S", "Bias.Tot",
                "CICover.N", "CICover.S", "CICover.Tot")
row.names(with.selection) <- delta.multiplier
kable(with.selection, digits=c(rep(1,3), rep(2,3)), 
      caption="Bias in density estimates when using model selected using AIC.")
```

## Conclusions from this portion of study

Note bias in the estimated density for the entire study area is never greater than 10%, yet another demonstration of **pooling robustness.**  Even with widely differing detection functions, the estimated density ignoring stratum-specific differences is essentially unbiased.

```{r}
#| label = "matplot",
#| echo = FALSE
matplot(delta.multiplier, pctbias, type="b", lwd=3, pch=20, xlab=expression(Delta), 
        ylab="Percent bias", col=1, main="Bias in estimated density")
legend("bottom", lty=1:3, lwd=3, legend=c("North", "South", "Total"))
abline(h=c(-5, 0, 5), lty=c(3,1,3), col="light grey")

matplot(delta.multiplier, ci.cover, type="b", lwd=3, pch=20, xlab=expression(Delta), 
        ylim=c(0.25,1),
        ylab="Confidence interval coverage", col=1, main="Confidence interval coverage")
legend("bottom", lty=1:3, lwd=3, legend=c("North", "South", "Total"))
abline(h=0.95)
```

Confidence interval coverage for stratum-specific estimates approaches nominal levels when $\Delta \approx 1$.  Coverage for the density estimate in the entire study area is nominal for all values of $\Delta$ with the exception of $\Delta<0.7$.


## Model selection sensitivity

This small simulation demonstrates the peril of making stratum-specific estimates when using a detection function that does not recognise stratum-specific detection function differences.  This situation can arise when numbers of stratum-specific detections are too small to support stratum-specific detection functions.  This set of simulations was devised such that there was sufficient effort in each stratum to avoid small numbers of detections.  Even so, use of the "wrong" (pooled) detection function leads to considerable bias in density estimates.

```{r}
#| label = "modsel"
plot(delta.multiplier, modelsel, 
     main="Stratum-specific model chosen", type="b", pch=20,
     xlab=expression(Delta), ylab="Stratum covariate chosen")
abline(h=0.50)
```

There are two messages from this model selection assessment.  Only when $\Delta < 0.8$ or $\Delta > 1.2$ is there a better than even chance AIC will detect the difference in detectability between strata.  Values of $\Delta$ in this region do not lead to extreme bias in stratum-specific density estimates when the pooled detection function model is used.  There is roughly a 10\% negative bias in density estimates of the north stratum and a 5\% positive bias in density estimates of the southern stratum.

# References

