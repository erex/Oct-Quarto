---
title: Tutorial--ducknest analysis in R ✏️
author: Centre for Research into Ecological and Environmental Modelling <br> **University of St Andrews**
date: "`r Sys.Date()`"
bibliography: references.bib
csl: apa.csl
webr:
    packages: ['Distance']
filters: 
  - webr
---

```{r}
#| label = "setup",
#| include = FALSE,
#| message = FALSE
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

<img src=https://images.unsplash.com/photo-1593594820228-a05cc04bc433?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80  width=400 height=200 style="float:right">

## Practical 2 -- Duck nest analysis

This has been your first experience using the `Distance` package.  There are only a handful of functions you need to successfully complete a distance sampling analysis.  This practical gave you experience with these functions.  The data are familiar to you because they the same data you used when trying to fit a detection function by hand in Exercise 1.  This exercise lets the computer do the work.  Compare the estimate of duck nest density produced by `Distance` with the estimate you manually produced.

```{webr-r}
#| label: "makeoutput"
#| context: output
#| message: FALSE
data("ducknest")
duckunits <- convert_units("meter", "kilometer", "square kilometer")
halfnorm <- ds(data=ducknest, key="hn", convert_units = duckunits)
summary(halfnorm)
```

```{r}
#| label: pa
#| echo: false
pa_choices <- c(answer="0.869", 
                "0.039",
                "614.25",
                "0.933")
interp_choices <- c("distance to which nests were detected",
                    "area under the curve",
                    answer="proportion of nests detected within 2.4m of transects",
                    "number of iterations to estimate detection function parameters",
                    answer="probability of detecting a nest within 2.4m of transect")
```

- What is the estimate value of $\hat{P}_a$? `r longmcq(pa_choices)`
- Given your estimate of $\hat{P}_a$, what is its meaning? `r longmcq(interp_choices)`


### Density converted to abundance

In the `ducknest` data frame, I failed to specify the size of the study area in the `Area` field. As a consequence, the `ds` function is only able to provide a density estimate. Given the size of the Monte Vista refuge is 47.7 $km^2$, and the estimate of nest density from the output provided, complete the code fragment to provide an estimate of the abundance of nests.

```{webr-r}
refuge_area <- _____
nest_density <- _____
nest_abundance <- refuge_area * nest_density
print(nest_abundance)
```

```{r}
#| label: abund_answer
#| echo: false

abund <- round(49.7 * 47.7)
```

```{r}
#| label: assquestion
#| echo: false
ass_choices <- c("Nests are uniformly distributed over refuge", 
                "Ducks like water",
                answer="Transects representatively sample the refuge",
                "Detection function model fits the data")
```

- What is the estimated number of nests on the refuge? `r fitb(abund)`
- What assumption does our estimated abundance of nests on the refuge rest? `r longmcq(ass_choices)`


```{webr-r}
#| label: gof
#| echo: false
gof_ds(halfnorm)
```

```{r}
#| label: gofquestion
#| echo: false
gof1_choices <- c(answer="model that fits has all points near the 45° line",
                  "this plot has nothing to do with model fit",
                  "a rapid rise in the graphed points implies good model fit")
gof2_choices <- c("P-value is <1, therefore the model fit is poor",
                  "The test statistic is smaller than the P-value, therefore the fit is adequate",
                  "The test statistic is close to 0, therefore the fit is poor",
                  answer="P-value is close to one, indicating  there is support for proposition the model fits the data")
```

- How should the plot be interpreted? `r longmcq(gof1_choices)`
- The numerical output from `gof_ds` is from the Cramer-von Mises test. Interpret the output. `r longmcq(gof2_choices)`

```{webr-r}
#| label: 3models
#| context: output
#| message: false
nest.hn <- ds(ducknest, key="hn", adjustment=NULL,
              convert_units=duckunits)
nest.uf.cos <- ds(ducknest, key="unif", adjustment="cos",
                  convert_units=duckunits)
nest.hr.poly <- ds(ducknest, key="hr", adjustment="poly", 
                  convert_units=duckunits)
hn.est <- nest.hn$dht$individuals$D$Estimate
uncos.est <- nest.uf.cos$dht$individuals$D$Estimate
hr.est <- nest.hr.poly$dht$individuals$D$Estimate
estimates <- data.frame(Density_estimates=round(c(hn.est, uncos.est, hr.est),2))
row.names(estimates) <- c("Half normal", "Uniform cosine", "Hazard rate")
print(estimates)
```

To reinforce the idea that similar results are produced *(for good data)* from the different key functions, write a few lines of code to explore this, using **R** as a calculator.  Value entered to one decimal place.

```{webr-r}
#| label: difference
smallest_est <- ___
largest_est <- ___
difference <- largest_est - smallest_est
relative_difference <- difference / smallest_est
print(round(relative_difference,3))
```

- What is the **percentage** difference between smallest and greatest density estimates using these three models? `r fitb(5)`


# References
